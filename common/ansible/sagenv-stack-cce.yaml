---

- hosts: commandcentral
  tasks:
    - name: Root tasks
      block:
        - import_role: 
            name: prepare-cce-provisoning
          tags:
            - sync-cce-provisoning
        - import_role: 
            name: create-known-hosts
          vars:
            ssh_known_hosts_dir: /etc/ssh
            ssh_known_hosts_file: ssh_known_hosts
      become: true
      tags:
        - sysprep
  
    - name: Non Root tasks
      block:
        ## this is to make sure we gather the facts again as the user {{ cce_owner }} in order to get a valid {{ ansible_env.HOME }}
        - setup:
          tags:
            - sysprep
            - install
        - name: set facts
          set_fact:
            install_cce: false
          tags:
            - sysprep
        - import_role: 
            name: create-known-hosts
          vars:
            ssh_known_hosts_dir: "{{ ansible_env.HOME }}/.ssh"
            ssh_known_hosts_file: known_hosts
          tags:
            - sysprep
        - import_role: 
            name: install-cce
          tags:
            - install
        - import_role: 
            name: configure-cce
          vars:
            config_item: tuning
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-tuning
        - import_role: 
            name: configure-cce
          vars:
            config_item: creds
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-creds
        - import_role: 
            name: configure-cce
          vars:
            config_item: licenses
            cce_configure_params:
              - name: "CC_SAG_LICENSE_DIR"
                value: "{{ cce_provisioning_licenses_path }}"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-licenses
        - import_role: 
            name: configure-cce
          vars:
            config_item: repo_images
            cce_configure_params:
              - name: "CC_SAG_IMAGE_DIR"
                value: "{{ cce_provisioning_images_path }}"
              - name: "CC_SAG_IMAGE_ACTION"
                value: "register"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-images
        - import_role: 
            name: configure-cce
          vars:
            config_item: sagrepo_products
            cce_configure_params:
              - name: "repo_products_version_major"
                value: "{{ webmethods_install_version_major }}"
              - name: "repo_products_version_minor"
                value: "{{ webmethods_install_version_minor }}"
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-products
        - import_role:
            name: configure-cce
          vars:
            config_item: sagrepo_fixes
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-repo-fixes
        - import_role: 
            name: configure-cce
          vars:
            config_item: update
            cce_configure_params: []
            cce_configure_params_secure: []
            configure_cce_force: true
          ignore_errors: yes
          tags:
            - configure
            - configure-update
      become: true
      become_user: "{{ cce_owner }}"
  post_tasks:
    - name: Non Root tasks
      block:
        - import_role: 
            name: post-install-webmethods
          vars:
            postinstall_force: false
            do_reboot: true
        - name: Wait for CCE ports to become open on the host
          wait_for:
            port: "{{ item }}"
            timeout: 600
          with_items:
            - 8090
            - 8091
      become: true
      tags:
        - post-install